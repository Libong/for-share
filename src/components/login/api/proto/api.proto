syntax = "proto3";

package com.liBong.login.interface;

option go_package = "./;api";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "router/api/proto/router.proto";
import "auth/api/proto/auth.proto";

service LoginInterface{

  option(libong.prefix) = "/libong/login";

  //登陆
  rpc loginIn (LoginInReq) returns (LoginInResp) {
    option (google.api.http) = {
      post: "/in"
    };
  }
  //登陆验证码发送
  rpc sendLoginSms (SendLoginSmsReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/libong/login/sms/send"
    };
  }
  //注册验证码发送
  rpc sendRegisterSms (SendRegisterSmsReq) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/register/sms/send"
    };
  }
  //注册
  rpc register (RegisterReq) returns (RegisterResp) {
    option (google.api.http) = {
      post: "/register"
    };
  }
  //登出
  rpc signOut (google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (libong.auth) = true;
    option (google.api.http) = {
      post: "/out"
    };
  }
  //用户信息
  rpc userInfo (google.protobuf.Empty) returns (UserInfoResp) {
    option (libong.auth) = true;
    option (google.api.http) = {
      get: "/user/info"
    };
  }
  //修改用户信息
  rpc updateUserInfo (UpdateUserInfoReq) returns (google.protobuf.Empty) {
    option (libong.auth) = true;
    option (google.api.http) = {
      post: "/user/info/update"
    };
  }
}
message LoginInReq{
  uint32 login_in_type = 1; //登陆类型
  string account = 2; //用户名
  string phone = 3; //手机号
  string password = 4; //密码
  string verify_code = 5; //短信验证码
}
message LoginInResp{
  string account_id = 1;
  string access_token = 2;
  string refresh_token = 3;
}
message SendLoginSmsReq{
  string phone = 1; //手机号
}
message SendRegisterSmsReq{
  string phone = 1; //手机号
}
message RegisterReq{
  string phone = 1; //手机号
  string verify_code = 2; //验证码
}
message RegisterResp{
  string account_id = 1;
  string access_token = 2;
  string refresh_token = 3;
}
message Meta{
  string id = 1;
  string name = 2;
}
message UserInfoResp{
  repeated Meta roles = 1;
  string account = 2; // 用户名
  uint32 sex = 3; // 性别
  string avatar = 4; // 头像
  repeated Meta departments = 5;
  bool has_password = 6; //是否有密码
}
message UpdateUserInfoReq{
  string account = 1; // 用户名
  uint32 sex = 2; // 性别
  string avatar = 3; // 头像
  string password = 4; //密码
}
enum LoginInType{
    LoginInTypeUnknown = 0;
    LoginInTypeByPhoneSms = 1; //手机短信
    LoginInTypeByAccountPwd = 2; //账户密码
    LoginInTypeByPhonePwd = 3; //手机密码
}